{
  "openapi": "3.0.0",
  "info": {
    "title": "Line OA Chatbot API",
    "description": "API documentation for the Line OA Chatbot with AI-powered responses, product catalog, healthcare information, and web research capabilities",
    "version": "1.1.0",
    "contact": {
      "name": "Support"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local Development Server"
    },
    {
      "url": "https://line-oa-chatbot.example.com",
      "description": "Production Server"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "API Root",
        "description": "Returns information about the API and available features",
        "responses": {
          "200": {
            "description": "API information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "LINE Bot API server is running"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.1.0"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Text message handling",
                        "AI response generation",
                        "Product management API"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Provides health status information about the API",
        "responses": {
          "200": {
            "description": "Health status information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-01-01T00:00:00.000Z"
                    },
                    "uptime": {
                      "type": "number",
                      "example": 3600
                    },
                    "version": {
                      "type": "string",
                      "example": "1.1.0"
                    },
                    "database": {
                      "type": "string",
                      "example": "connected"
                    },
                    "memory": {
                      "type": "string",
                      "example": "120MB"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Performance Metrics",
        "description": "Provides detailed performance metrics for monitoring",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed metrics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uptime": {
                      "type": "number",
                      "example": 86400
                    },
                    "timestamp": {
                      "type": "number",
                      "example": 1640995200000
                    },
                    "requests": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 15000
                        },
                        "errors": {
                          "type": "number",
                          "example": 150
                        },
                        "error_rate": {
                          "type": "string",
                          "example": "1.00%"
                        }
                      }
                    },
                    "response_times": {
                      "type": "object",
                      "properties": {
                        "avg": {
                          "type": "number",
                          "example": 250
                        },
                        "p50": {
                          "type": "number",
                          "example": 200
                        },
                        "p95": {
                          "type": "number",
                          "example": 500
                        },
                        "p99": {
                          "type": "number",
                          "example": 800
                        }
                      }
                    },
                    "ai_api": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 10000
                        },
                        "errors": {
                          "type": "number",
                          "example": 100
                        },
                        "providers": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "count": {
                                "type": "number",
                                "example": 5000
                              },
                              "success": {
                                "type": "number",
                                "example": 4950
                              },
                              "errors": {
                                "type": "number",
                                "example": 50
                              },
                              "avg_duration": {
                                "type": "number",
                                "example": 450
                              }
                            }
                          }
                        }
                      }
                    },
                    "resources": {
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "type": "string",
                          "example": "25.50%"
                        },
                        "memory": {
                          "type": "string",
                          "example": "65.20%"
                        },
                        "memory_mb": {
                          "type": "number",
                          "example": 450
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - API key is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhook": {
      "post": {
        "summary": "LINE Webhook",
        "description": "Endpoint for receiving events from the LINE Messaging API",
        "requestBody": {
          "description": "LINE webhook event payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "destination": {
                    "type": "string"
                  },
                  "events": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Webhook processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - LINE signature verification failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid signature"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "summary": "Get Products",
        "description": "Returns a list of all products",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of products to return",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 100
                        },
                        "page": {
                          "type": "number",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "example": 10
                        },
                        "pages": {
                          "type": "number",
                          "example": 10
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Product",
        "description": "Creates a new product",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "description": "Product data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "product": {
                      "$ref": "#/components/schemas/Product"
                    },
                    "message": {
                      "type": "string",
                      "example": "Product created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid product data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid product data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - API key is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "summary": "Get Product by ID",
        "description": "Returns a product by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "product": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Product not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Product",
        "description": "Updates an existing product",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated product data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "product": {
                      "$ref": "#/components/schemas/Product"
                    },
                    "message": {
                      "type": "string",
                      "example": "Product updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid product data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid product data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - API key is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Product not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Product",
        "description": "Deletes an existing product",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - API key is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Product not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/products/category/{category}": {
      "get": {
        "summary": "Get Products by Category",
        "description": "Returns products filtered by category",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "Product category",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of products to return",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of products in the specified category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 50
                        },
                        "page": {
                          "type": "number",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "example": 10
                        },
                        "pages": {
                          "type": "number",
                          "example": 5
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No products found in the specified category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No products found in this category"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "prod_123456"
          },
          "name": {
            "type": "string",
            "example": "HIV Test Kit"
          },
          "description": {
            "type": "string",
            "example": "Rapid HIV test kit for home use"
          },
          "price": {
            "type": "number",
            "example": 299.99
          },
          "category": {
            "type": "string",
            "example": "health"
          },
          "image": {
            "type": "string",
            "example": "https://example.com/images/hiv-test-kit.jpg"
          },
          "inStock": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-01T00:00:00.000Z"
          }
        }
      },
      "ProductInput": {
        "type": "object",
        "required": [
          "name",
          "price",
          "category"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "HIV Test Kit"
          },
          "description": {
            "type": "string",
            "example": "Rapid HIV test kit for home use"
          },
          "price": {
            "type": "number",
            "example": 299.99
          },
          "category": {
            "type": "string",
            "example": "health"
          },
          "image": {
            "type": "string",
            "example": "https://example.com/images/hiv-test-kit.jpg"
          },
          "inStock": {
            "type": "boolean",
            "example": true
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "API key for accessing admin-only endpoints"
      }
    }
  }
}