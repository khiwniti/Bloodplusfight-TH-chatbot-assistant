# Default API Gateway Configuration
server {
    listen 80;
    server_name localhost;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Global rate limiting
    limit_req zone=api burst=20 nodelay;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "API Gateway Healthy\n";
        add_header Content-Type text/plain;
    }

    # LINE Bot Webhook (higher rate limit)
    location /webhook {
        limit_req zone=webhook burst=50 nodelay;
        
        proxy_pass http://line-bot-gateway;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # AI/Conversation Service
    location /api/ai/ {
        rewrite ^/api/ai/(.*)$ /$1 break;
        
        proxy_pass http://ai-conversation;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeout for AI processing
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Customer Management Service
    location /api/customers/ {
        rewrite ^/api/customers/(.*)$ /$1 break;
        
        proxy_pass http://customer-management;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Product Catalog Service
    location /api/products/ {
        rewrite ^/api/products/(.*)$ /$1 break;
        
        proxy_pass http://product-catalog;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Enable caching for product data
        proxy_cache_valid 200 5m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    }

    # Healthcare/Research Service
    location /api/research/ {
        rewrite ^/api/research/(.*)$ /$1 break;
        
        proxy_pass http://healthcare-research;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeout for research operations
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Monitoring/Admin Service (protected)
    location /api/admin/ {
        # Additional security for admin endpoints
        deny all;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        
        rewrite ^/api/admin/(.*)$ /$1 break;
        
        proxy_pass http://monitoring-admin;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Cache/Storage Service (internal only)
    location /api/cache/ {
        # Restrict to internal network only
        deny all;
        allow 172.20.0.0/16;
        
        rewrite ^/api/cache/(.*)$ /$1 break;
        
        proxy_pass http://cache-storage;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }

    # Auth/Security Service (internal only)
    location /api/auth/ {
        # Restrict to internal network only
        deny all;
        allow 172.20.0.0/16;
        
        rewrite ^/api/auth/(.*)$ /$1 break;
        
        proxy_pass http://auth-security;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }

    # Static files (if any)
    location /static/ {
        root /var/www;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Default route (redirect to documentation or status page)
    location / {
        return 200 '{"status":"API Gateway Active","version":"1.0.0","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }

    # Handle 404s
    location = /404.html {
        return 404 '{"error":"Not Found","message":"The requested resource was not found"}';
        add_header Content-Type application/json;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        return 500 '{"error":"Internal Server Error","message":"The server encountered an internal error"}';
        add_header Content-Type application/json;
    }
}